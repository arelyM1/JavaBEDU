import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.ConcurrentHashMap;
import java.util.Collections;
import java.util.Comparator;
public class PlanTemario {
    public static void main(String[] args) {
        //lista segura para temas activos (puede modificarse sin errores en concurrencia)
        CopyOnWriteArrayList<Tema> temas = new CopyOnWriteArrayList<>();

        //agregamos algunos temas de ejemplo
        temas.add(new Tema("ðŸ“˜Lectura comprensiva", 2));
        temas.add(new Tema("ðŸ“•MatemÃ¡ticas bÃ¡sicas", 1));
        temas.add(new Tema("ðŸ“™Cuidado del medio ambiente", 3));
        temas.add(new Tema("ðŸ“’Historia universal", 2));

        //mapa concurrente para recursos compartidos por tÃ­tulo del tema
        ConcurrentHashMap<String, String> recursos = new ConcurrentHashMap<>();
        recursos.put("ðŸ”§Lectura comprensiva", "https://recursos.edu/lectura");
        recursos.put("ðŸ”§MatemÃ¡ticas bÃ¡sicas", "https://recursos.edu/mate");
        recursos.put("ðŸ”§Cuidado del medio ambiente", "https://recursos.edu/medioambiente");
        recursos.put("ðŸ”§Historia universal", "https://recursos.edu/historia");

        //muestra los temas ordenados alfabÃ©ticamente (Comparable)
        Collections.sort(temas);
        System.out.println("ðŸ“š Temas ordenados alfabÃ©ticamente:");
        for (Tema t : temas) {
            System.out.println(t);
        }

        //Ordenar temas por prioridad (Comparator)
        temas.sort(Comparator.comparingInt(Tema::getPrioridad));
        System.out.println("\nðŸš¦ Temas ordenados por prioridad:");
        for (Tema t : temas) {
            System.out.println(t);
        }

        //Muestra el repositorio de recursos
        System.out.println("\nðŸ”— Recursos compartidos por tema:");
        for (String titulo : recursos.keySet()) {
            System.out.println(titulo + " â†’ " + recursos.get(titulo));
        }
    }
}